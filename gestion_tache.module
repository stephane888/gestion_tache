<?php

/**
 *
 * @file
 * Primary module hooks for gestion tache module.
 *
 * @DCG
 * This file is no longer required in Drupal 8.
 * @see https://www.drupal.org/node/2217931
 */

/**
 * Implements hook_theme().
 */
function gestion_tache_theme() {
  $theme = [];
  $theme['app_project'] = [
    'render element' => 'elements',
    'file' => 'app_project.page.inc',
    'template' => 'app_project'
  ];
  $theme['app_project_content_add_list'] = [
    'render element' => 'content',
    'variables' => [
      'content' => NULL
    ],
    'file' => 'app_project.page.inc'
  ];
  //
  $theme['app_memos'] = [
    'render element' => 'elements',
    'file' => 'app_memos.page.inc',
    'template' => 'app_memos'
  ];
  $theme['app_memos_content_add_list'] = [
    'render element' => 'content',
    'variables' => [
      'content' => NULL
    ],
    'file' => 'app_memos.page.inc'
  ];
  //
  $theme['app_prime'] = [
    'render element' => 'elements',
    'file' => 'app_prime.page.inc',
    'template' => 'app_prime'
  ];
  $theme['app_prime_content_add_list'] = [
    'render element' => 'content',
    'variables' => [
      'content' => NULL
    ],
    'file' => 'app_prime.page.inc'
  ];
  //
  $theme['app_client'] = [
    'render element' => 'elements',
    'file' => 'app_client.page.inc',
    'template' => 'app_client'
  ];
  $theme['app_client_content_add_list'] = [
    'render element' => 'content',
    'variables' => [
      'content' => NULL
    ],
    'file' => 'app_client.page.inc'
  ];
  //
  return $theme;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function gestion_tache_theme_suggestions_app_project(array $variables) {
  $suggestions = [];
  $entity = $variables['elements']['#app_project'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');
  
  $suggestions[] = 'app_project__' . $sanitized_view_mode;
  $suggestions[] = 'app_project__' . $entity->bundle();
  $suggestions[] = 'app_project__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'app_project__' . $entity->id();
  $suggestions[] = 'app_project__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function gestion_tache_theme_suggestions_app_memos(array $variables) {
  $suggestions = [];
  $entity = $variables['elements']['#app_memos'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');
  
  $suggestions[] = 'app_memos__' . $sanitized_view_mode;
  $suggestions[] = 'app_memos__' . $entity->bundle();
  $suggestions[] = 'app_memos__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'app_memos__' . $entity->id();
  $suggestions[] = 'app_memos__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function gestion_tache_theme_suggestions_app_prime(array $variables) {
  $suggestions = [];
  $entity = $variables['elements']['#app_prime'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');
  
  $suggestions[] = 'app_prime__' . $sanitized_view_mode;
  $suggestions[] = 'app_prime__' . $entity->bundle();
  $suggestions[] = 'app_prime__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'app_prime__' . $entity->id();
  $suggestions[] = 'app_prime__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function gestion_tache_theme_suggestions_app_client(array $variables) {
  $suggestions = [];
  $entity = $variables['elements']['#app_client'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');
  
  $suggestions[] = 'app_client__' . $sanitized_view_mode;
  $suggestions[] = 'app_client__' . $entity->bundle();
  $suggestions[] = 'app_client__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'app_client__' . $entity->id();
  $suggestions[] = 'app_client__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}

/**
 *
 * @param \Drupal\mysql\Driver\Database\mysql\Select $query
 */
function gestion_tache_query_alter(\Drupal\Core\Database\Query\AlterableInterface $query) {
  // \Stephane888\Debug\debugLog::kintDebugDrupal($query->__toString(),
  // 'gestion_tache_query_alter', true);

/**
 * On filtre les produits dans le panier en fonction du domaine encours.
 */
  // if ($query->hasTag('commerce_cart_order_ids')) {
  // $query->addJoin('INNER', 'commerce_order_item', 'coi',
  // 'coi.order_id=commerce_order.order_id');
  // $query->addJoin('INNER', 'commerce_product_variation_field_data', 'prd_va',
  // 'prd_va.variation_id=coi.purchased_entity');
  // $query->addJoin('INNER', 'commerce_product__field_domain_access', 'prd_da',
  // 'prd_da.entity_id=prd_va.product_id');
  // $query->condition('prd_da.field_domain_access_target_id',
  // $domain->getActiveId());
  // }
}

/**
 * implement hook_query_entityreference_alter
 * Filtrer les requetes de recherche via le domaine tant que cela est possible.
 *
 * @param \Drupal\Core\Database\Query\AlterableInterface $query
 */
function gestion_tache_query_entityreference_alter(\Drupal\mysql\Driver\Database\mysql\Select $query) {
  // \Stephane888\Debug\debugLog::kintDebugDrupal($query->__toString(),
  // 'gestion_tache_query_entity_reference_alter', true);
  // /**
  // *
  // * @var \Drupal\node\Plugin\EntityReferenceSelection\NodeSelection
  // $entity_reference
  // */
  // $entity_reference =
  // $query->getMetaData('entity_reference_selection_handler');
}


